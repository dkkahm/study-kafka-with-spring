---
version: '2'
services:

  zookeeper0:
    image: confluentinc/cp-zookeeper:5.2.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
    - 2181:2181
    volumes:
      - ./volumes/zookeeper/data:/data
      - ./volumes/zookeeper/datalog:/datalog

  kafka0:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper0:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka0:29092,
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # JMX_PORT: 9997
      # KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.rmi.port=9997
    ports:
      - 9092:9092
      # - 9997:9997
    volumes:
      - ./volumes/kafka/data:/var/lib/kafka/data

  schemaregistry0:
    image: confluentinc/cp-schema-registry:5.5.7
    depends_on:
      - zookeeper0
      - kafka0
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka0:29092
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper0:2181
      # SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT
      SCHEMA_REGISTRY_HOST_NAME: schemaregistry0
      # SCHEMA_REGISTRY_LISTENERS: http://schemaregistry0:8081

      # SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
      # SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      # SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
    ports:
    - 8085:8081

  # schema-registry-ui:
  #   image: landoop/schema-registry-ui:0.9.4
  #   hostname: schema-registry-ui
  #   # schema-registry-ui binds to port 8000, but we are going to expose it on our local
  #   # machine on port 8001.
  #   ports:
  #     - "8001:8000"
  #   environment:
  #     # Required. Instructs the UI where it can find the schema registry.
  #     SCHEMAREGISTRY_URL: http://schemaregistry0:8081/
  #     # This instructs the docker image to use Caddy to proxy traffic to schema-registry-ui.
  #     PROXY: "true"
  #   # As this is a UI for Schema Registry, we rely upon Schema Registry. Docker will wait for
  #   # the schema-registry service to be up before staring schema-registry-ui.
  #   depends_on:
  #     - schemaregistry0

  kafka-rest-proxy0:
    image: confluentinc/cp-kafka-rest:5.5.7
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      # Specifies the ZooKeeper connection string. This service connects
      # to ZooKeeper so that it can broadcast its endpoints as well as
      # react to the dynamic topology of the Kafka cluster.
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      # The address on which Kafka REST will listen for API requests.
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      # The base URL for Schema Registry that should be used by the Avro serializer.
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schemaregistry0:8081/
      # Required. This is the hostname used to generate absolute URLs in responses.
      # It defaults to the Java canonical hostname for the container, which might
      # not be resolvable in a Docker environment.
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      # The list of Kafka brokers to connect to. This is only used for bootstrapping,
      # the addresses provided here are used to initially connect to the cluster,
      # after which the cluster will dynamically change. Thanks, ZooKeeper!
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka0:29092
    # Kafka REST relies upon Kafka, ZooKeeper, and Schema Registry.
    # This will instruct docker to wait until those services are up
    # before attempting to start Kafka REST.
    depends_on:
      - zookeeper0
      - kafka0
      - schemaregistry0

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - zookeeper0
      - kafka0
      - schemaregistry0
      - kafka-rest-proxy0
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper0:2181
      # KAFKA_CLUSTERS_0_JMXPORT: 9997
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry0:8081
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
